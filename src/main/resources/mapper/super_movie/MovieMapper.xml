<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.super_movie.mapper.MovieMapper">
    <select id="findActorById" resultType="com.example.super_movie.entity.Person" parameterType="java.lang.Integer" >
        SELECT person.id,person.name,person.sex,person.born,person.info
        FROM person_movie LEFT JOIN person on person_movie.person_id=person.id
        WHERE person_movie.movie_id = #{id} AND person_movie.job=3
    </select>
    <select id="findDirectorById" resultType="com.example.super_movie.entity.Person" parameterType="java.lang.Integer" >
        SELECT person.id,person.name,person.sex,person.born,person.info
        FROM person_movie LEFT JOIN person on person_movie.person_id=person.id
        WHERE person_movie.movie_id = #{id} AND person_movie.job=1
    </select>
    <select id="findScreenwriterById" resultType="com.example.super_movie.entity.Person" parameterType="java.lang.Integer" >
        SELECT person.id,person.name,person.sex,person.born,person.info
        FROM person_movie LEFT JOIN person on person_movie.person_id=person.id
        WHERE person_movie.movie_id = #{id} AND person_movie.job=2
    </select>
    <select id="findKindByMovieId" resultType="String" parameterType="java.lang.Integer" >
        select  kind
        from kind_movie
        where movie_id = #{movieId}
    </select>
    <select id="findLanguageByMovieId" resultType="String" parameterType="java.lang.Integer" >
        select  language
        from language
        where movie_id = #{movieId}
    </select>
    <insert id="addMovie">
        insert into movie (name,time,country,length,info)
        values (#{name},#{time},#{country},#{length},#{info})
    </insert>
    <select id="getAvgScoreAndNumByMovieId" resultType="java.util.Map" parameterType="java.lang.Integer">
    SELECT IFNULL(avg(score),0) as avg,count(*) as sum
    FROM movie_comment
    WHERE movie_id=#{movieId}
    </select>
    <select id="findMovieListByKindOrderByTime" resultType="com.example.super_movie.vo.SelectMovieList" parameterType="java.lang.String">
    SELECT id,name,time
    FROM movie join kind_movie on movie.id=kind_movie.movie_id
    WHERE kind=#{kind} order by time desc
    </select>
    <select id="findMovieListByKindOrderByHot" resultType="com.example.super_movie.vo.SelectMovieList" parameterType="java.lang.String">
    SELECT movie.id,name,time,count(*) as hot
    FROM movie
    join movie_comment on movie.id=movie_comment.movie_id
    left join kind_movie on movie.id=kind_movie.movie_id
    WHERE kind_movie.kind=#{kind} GROUP BY id order by hot desc
    </select>
    <select id="getKindNumByKind" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(*)
    FROM kind_movie
    WHERE kind=#{kind}
    </select>
    <select id="searchMovieByName" resultType="com.example.super_movie.vo.SelectMovieList">
    SELECT movie.id,movie.name,movie.time,movie.info,count(movie_comment.movie_id) as hot,TRUNCATE(IFNULL(avg(movie_comment.score),0),1) as avg
    FROM movie left join movie_comment on movie.id=movie_comment.movie_id
	WHERE movie.name like "%"#{name}"%" or movie.id=#{name}
    GROUP BY movie.id
    order by hot desc
    limit #{start},10
    </select>
    <select id="getSearchCountNum" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(*)
    FROM movie
    WHERE name like #{name}
    </select>
    <insert id="addNewMovie" useGeneratedKeys="true" keyProperty="id"  keyColumn="id">
    insert into movie (name,time,country,length,info)
    values (#{name},#{time},#{country},#{length},#{info})
    </insert>
    <insert id="addKindsForMovie">
    replace into kind_movie (kind,movie_id) values
        <foreach collection="array" item="kind" index="index" separator=",">
            (#{kind},#{movieId})
        </foreach>
    </insert>
    <insert id="addLanguagesForMovie">
        replace into language (movie_id,language ) values
        <foreach collection="array" item="language" index="index" separator=",">
            (#{movieId},#{language})
        </foreach>
    </insert>
    <insert id="addPersonForMovie">
    insert into person_movie (person_id,movie_id,job)
    values (#{personId},#{movieId},#{job})
    </insert>
    <select id="getMovieAvgRankList" resultType="com.example.super_movie.vo.MovieInfo" parameterType="java.lang.Integer">
    SELECT movie.*,count(movie_comment.movie_id) as sum,TRUNCATE(IFNULL(avg(movie_comment.score),0),1) as score
    FROM movie left join movie_comment on movie.id=movie_comment.movie_id
    GROUP BY movie.id
    HAVING sum>#{num}
    order by score desc
    limit 0,25
    </select>
    <select id="getMovieHotRankList" resultType="com.example.super_movie.vo.MovieInfo">
    SELECT movie.*,count(movie_comment.movie_id) as sum,TRUNCATE(IFNULL(avg(movie_comment.score),0),1) as score
    FROM movie left join movie_comment on movie.id=movie_comment.movie_id
    GROUP BY movie.id
    order by sum desc
    limit 0,25
    </select>
</mapper>
